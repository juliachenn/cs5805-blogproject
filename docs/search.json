[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/5-anomaly-outlier-detection/index.html",
    "href": "posts/5-anomaly-outlier-detection/index.html",
    "title": "Anomaly/Outlier Detection",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/3-linear-nonlinear-regression/index.html",
    "href": "posts/3-linear-nonlinear-regression/index.html",
    "title": "Linear and Nonlinear Regression",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/1-prob-theory-rand-var/index.html",
    "href": "posts/1-prob-theory-rand-var/index.html",
    "title": "Probability Theory & Random Variables",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "cs5805-blogproject",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nProbability Theory & Random Variables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNov 29, 2023\n\n\nJulia Chen\n\n\n\n\n\n\n  \n\n\n\n\nClustering\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNov 29, 2023\n\n\nJulia Chen\n\n\n\n\n\n\n  \n\n\n\n\nLinear and Nonlinear Regression\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNov 29, 2023\n\n\nJulia Chen\n\n\n\n\n\n\n  \n\n\n\n\nClassification\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNov 29, 2023\n\n\nJulia Chen\n\n\n\n\n\n\n  \n\n\n\n\nAnomaly/Outlier Detection\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNov 29, 2023\n\n\nJulia Chen\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 29, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nNov 26, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2-clustering/index.html",
    "href": "posts/2-clustering/index.html",
    "title": "Clustering",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/4-classification/index.html",
    "href": "posts/4-classification/index.html",
    "title": "Classification",
    "section": "",
    "text": "First, making sure scikit-image is installed for image processing\nThis blog post will apply the topic of classification with detecting different types of fruit (peach, banana, guava). Classification is a supervised learning task that involves predicting which class/group something (e.g. an image) belongs in. For this post, we will mainly use a grid search approach using a support vector classifer to classify the fruit images.\n\n%pip install scikit-image\n\nRequirement already satisfied: scikit-image in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (0.22.0)\nRequirement already satisfied: numpy&gt;=1.22 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (1.26.2)\nRequirement already satisfied: scipy&gt;=1.8 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (1.11.4)\nRequirement already satisfied: networkx&gt;=2.8 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (3.2.1)\nRequirement already satisfied: pillow&gt;=9.0.1 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (10.1.0)\nRequirement already satisfied: imageio&gt;=2.27 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (2.33.0)\nRequirement already satisfied: tifffile&gt;=2022.8.12 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (2023.9.26)\nRequirement already satisfied: packaging&gt;=21 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (23.2)\nRequirement already satisfied: lazy_loader&gt;=0.3 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (0.3)\nNote: you may need to restart the kernel to use updated packages.\n\n\n\nimport os\nfrom skimage.io import imread\nfrom skimage import io\nfrom skimage.transform import resize\nimport numpy as np\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.svm import SVC\n\nLet’s get the directories of the images:\n\ncurr_dir = ''\npeach_dir = os.path.join(curr_dir, 'peach_data') #0\nbanana_dir = os.path.join(curr_dir, 'banana_data') #1\nguava_dir = os.path.join(curr_dir, 'guava_data') #2\n\nHere are some example images from our dataset\n\npeach = io.imread(os.path.join(peach_dir, 'Peach001.png'))\nio.imshow(peach)\nio.show()"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/4-classification/index.html#processing-the-data",
    "href": "posts/4-classification/index.html#processing-the-data",
    "title": "Classification",
    "section": "",
    "text": "First, making sure scikit-image is installed for image processing\nThis blog post will apply the topic of classification with detecting different types of fruit (peach, banana, guava). Classification is a supervised learning task that involves predicting which class/group something (e.g. an image) belongs in. For this post, we will mainly use a grid search approach using a support vector classifer to classify the fruit images.\n\n%pip install scikit-image\n\nRequirement already satisfied: scikit-image in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (0.22.0)\nRequirement already satisfied: numpy&gt;=1.22 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (1.26.2)\nRequirement already satisfied: scipy&gt;=1.8 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (1.11.4)\nRequirement already satisfied: networkx&gt;=2.8 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (3.2.1)\nRequirement already satisfied: pillow&gt;=9.0.1 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (10.1.0)\nRequirement already satisfied: imageio&gt;=2.27 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (2.33.0)\nRequirement already satisfied: tifffile&gt;=2022.8.12 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (2023.9.26)\nRequirement already satisfied: packaging&gt;=21 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (23.2)\nRequirement already satisfied: lazy_loader&gt;=0.3 in c:\\users\\julia\\appdata\\local\\programs\\python\\python310\\lib\\site-packages (from scikit-image) (0.3)\nNote: you may need to restart the kernel to use updated packages.\n\n\n\nimport os\nfrom skimage.io import imread\nfrom skimage import io\nfrom skimage.transform import resize\nimport numpy as np\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.svm import SVC\n\nLet’s get the directories of the images:\n\ncurr_dir = ''\npeach_dir = os.path.join(curr_dir, 'peach_data') #0\nbanana_dir = os.path.join(curr_dir, 'banana_data') #1\nguava_dir = os.path.join(curr_dir, 'guava_data') #2\n\nHere are some example images from our dataset\n\npeach = io.imread(os.path.join(peach_dir, 'Peach001.png'))\nio.imshow(peach)\nio.show()"
  }
]